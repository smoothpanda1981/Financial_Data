<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.2.xsd" >

    <import resource="database.xml"/>

    <context:component-scan base-package="com.yan.wang.financialdata" />

    <bean id="report" class="com.yan.wang.financialdata.model.Report" scope="prototype" />

    <!-- stored job-metadata in database -->
    <!--<bean id="jobRepository"-->
          <!--class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">-->
        <!--<property name="dataSource" ref="mysqlDataSource" />-->
        <!--<property name="transactionManager" ref="transactionManager" />-->
        <!--<property name="databaseType" value="mysql" />-->
    <!--</bean>-->

    <!-- stored job-metadata in memory -->
    <bean id="jobRepository"
      class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
      <property name="transactionManager" ref="transactionManager" />
    </bean>

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>

    <batch:job id="reportJob">
        <!--<batch:step id="step1">-->
            <!--<batch:tasklet>-->
                <!--<batch:chunk reader="cvsFileItemReader" writer="mysqlItemWriter" commit-interval="2">-->
                <!--</batch:chunk>-->
            <!--</batch:tasklet>-->
        <!--</batch:step>-->
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="StockItemReader" writer="StockItemWriter" commit-interval="2">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="StockItemReader" class="com.yan.wang.financialdata.itemreader.StockItemReader">

    </bean>

    <bean id="StockItemWriter" class="com.yan.wang.financialdata.itemwriter.StockItemWriter">

    </bean>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <!-- Read a csv file -->
        <property name="resource" value="classpath:cvs/report.csv" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <!-- split it -->
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="date,impressions,clicks,earning" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <!-- return back to reader, rather than a mapped object. -->
                    <!--
                <bean class="org.springframework.batch.item.file.mapping.PassThroughFieldSetMapper" />
                     -->
                    <!-- map to an object -->
                    <bean
                            class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="prototypeBeanName" value="report" />
                    </bean>
                </property>

            </bean>
        </property>

    </bean>

    <bean id="mysqlItemWriter"
          class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="mysqlDataSource" />
        <property name="sql">
            <value>
                <![CDATA[
            	    insert into REPORT(DATE,IMPRESSIONS,CLICKS,EARNING) values (:date, :impressions, :clicks, :earning)
                ]]>
            </value>
        </property>
        <!-- It will take care matching between object property and sql name parameter -->
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>

    <bean id="runScheduler" class="com.yan.wang.financialdata.app.RunScheduler" />

    <!-- Run every 5 seconds -->
    <task:scheduled-tasks>
        <!-- <task:scheduled ref="runScheduler" method="run" fixed-delay="5000"/> -->
        <task:scheduled ref="runScheduler" method="run" cron="*/50 * * * * *" />
    </task:scheduled-tasks>

</beans>